{"ast":null,"code":"/*\n** EPITECH PROJECT, 2020\n** B-DEV-500-PAR-5-1-cardgames-lucas.guyader\n** File description:\n** Firebase.js\n*/\nimport FirebaseContext from './context';\nimport app from 'firebase/app';\nimport 'firebase/auth';\nconst settings = {\n  timestampsInSnapshots: true\n};\nconst config = {\n  apiKey: \"AIzaSyApxGqeucVNYI6xdYVdM5nsNXTD219BJWw\",\n  authDomain: \"dashboard-cc38f.firebaseapp.com\",\n  databaseURL: \"https://dashboard-cc38f.firebaseio.com\",\n  projectId: \"dashboard-cc38f\",\n  storageBucket: \"dashboard-cc38f.appspot.com\",\n  messagingSenderId: \"805069170481\",\n  appId: \"1:805069170481:web:6bfa918b14a4cd8b15f210\",\n  measurementId: \"G-DLPVEK2M25\"\n};\n\nclass Firebase {\n  constructor() {\n    this.doCreateUserWithEmailAndPassword = (email, password) => this.auth.createUserWithEmailAndPassword(email, password);\n\n    this.doSignInWithEmailAndPassword = (email, password) => this.auth.signInWithEmailAndPassword(email, password);\n\n    this.doSignOut = () => this.auth.signOut();\n\n    this.doPasswordReset = email => this.auth.sendPasswordResetEmail(email);\n\n    this.doPasswordUpdate = password => this.auth.currentUser.updatePassword(password);\n\n    app.initializeApp(config);\n    this.auth = app.auth();\n  }\n\n}\n\nexport default Firebase;\nexport { FirebaseContext };","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/Firestore.js"],"names":["FirebaseContext","app","settings","timestampsInSnapshots","config","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","Firebase","constructor","doCreateUserWithEmailAndPassword","email","password","auth","createUserWithEmailAndPassword","doSignInWithEmailAndPassword","signInWithEmailAndPassword","doSignOut","signOut","doPasswordReset","sendPasswordResetEmail","doPasswordUpdate","currentUser","updatePassword","initializeApp"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,eAAP,MAA4B,WAA5B;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,OAAO,eAAP;AAEA,MAAMC,QAAQ,GAAG;AAACC,EAAAA,qBAAqB,EAAE;AAAxB,CAAjB;AAEA,MAAMC,MAAM,GAAG;AACXC,EAAAA,MAAM,EAAE,yCADG;AAEXC,EAAAA,UAAU,EAAE,iCAFD;AAGXC,EAAAA,WAAW,EAAE,wCAHF;AAIXC,EAAAA,SAAS,EAAE,iBAJA;AAKXC,EAAAA,aAAa,EAAE,6BALJ;AAMXC,EAAAA,iBAAiB,EAAE,cANR;AAOXC,EAAAA,KAAK,EAAE,2CAPI;AAQXC,EAAAA,aAAa,EAAE;AARJ,CAAf;;AAWA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,GAAG;AAAA,SAKdC,gCALc,GAKqB,CAACC,KAAD,EAAQC,QAAR,KACnC,KAAKC,IAAL,CAAUC,8BAAV,CAAyCH,KAAzC,EAAgDC,QAAhD,CANc;;AAAA,SAQdG,4BARc,GAQiB,CAACJ,KAAD,EAAQC,QAAR,KAC/B,KAAKC,IAAL,CAAUG,0BAAV,CAAqCL,KAArC,EAA4CC,QAA5C,CATc;;AAAA,SAWdK,SAXc,GAWF,MAAM,KAAKJ,IAAL,CAAUK,OAAV,EAXJ;;AAAA,SAadC,eAbc,GAaKR,KAAD,IAAW,KAAKE,IAAL,CAAUO,sBAAV,CAAiCT,KAAjC,CAbf;;AAAA,SAedU,gBAfc,GAeMT,QAAD,IACnB,KAAKC,IAAL,CAAUS,WAAV,CAAsBC,cAAtB,CAAqCX,QAArC,CAhBc;;AACZhB,IAAAA,GAAG,CAAC4B,aAAJ,CAAkBzB,MAAlB;AACA,SAAKc,IAAL,GAAYjB,GAAG,CAACiB,IAAJ,EAAZ;AACD;;AAJU;;AAoBf,eAAeL,QAAf;AACA,SAASb,eAAT","sourcesContent":["/*\n** EPITECH PROJECT, 2020\n** B-DEV-500-PAR-5-1-cardgames-lucas.guyader\n** File description:\n** Firebase.js\n*/\n\nimport FirebaseContext from './context';\nimport app from 'firebase/app';\nimport 'firebase/auth';\n\nconst settings = {timestampsInSnapshots: true};\n\nconst config = {\n    apiKey: \"AIzaSyApxGqeucVNYI6xdYVdM5nsNXTD219BJWw\",\n    authDomain: \"dashboard-cc38f.firebaseapp.com\",\n    databaseURL: \"https://dashboard-cc38f.firebaseio.com\",\n    projectId: \"dashboard-cc38f\",\n    storageBucket: \"dashboard-cc38f.appspot.com\",\n    messagingSenderId: \"805069170481\",\n    appId: \"1:805069170481:web:6bfa918b14a4cd8b15f210\",\n    measurementId: \"G-DLPVEK2M25\"\n};\n\nclass Firebase {\n    constructor() {\n      app.initializeApp(config);\n      this.auth = app.auth();\n    }\n\n    doCreateUserWithEmailAndPassword = (email, password) =>\n    this.auth.createUserWithEmailAndPassword(email, password);\n\n    doSignInWithEmailAndPassword = (email, password) =>\n    this.auth.signInWithEmailAndPassword(email, password);\n\n    doSignOut = () => this.auth.signOut();\n\n    doPasswordReset = (email) => this.auth.sendPasswordResetEmail(email);\n\n    doPasswordUpdate = (password) =>\n    this.auth.currentUser.updatePassword(password);\n}\n\nexport default Firebase;\nexport { FirebaseContext };"]},"metadata":{},"sourceType":"module"}