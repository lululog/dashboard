{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Game_app.js\";\nimport React, { Component } from \"react\";\nconst api = {\n  base: \"https://api.rawg.io/api/\",\n  key: \"de60294f61384714bcf0ed47cdcb2208\"\n};\n\nclass Games_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      date: \"\",\n      games: {}\n    };\n  }\n\n  async getGames() {\n    var new_query = this.state.query.split(\" \").join(\"-\");\n    const res = await fetch(`${api.base}games/${new_query}`);\n    return res;\n  }\n\n  handleClick() {\n    this.getGames().then(res => res.json()).then(result => {\n      this.setState({\n        games: result,\n        query: \"\"\n      });\n    });\n  }\n\n  get_genre() {\n    let games_array = this.state.games.genres.map((i, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [i.name, \" \"]\n      }, index.toString(), true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 14\n      }, this);\n    });\n    return games_array;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Game searcher\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          placeholder: \"Enter the game name\",\n          onChange: e => this.setState({\n            query: e.target.value\n          }),\n          value: this.state.query\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => this.handleClick(),\n        children: \"Search\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), typeof this.state.games.genres !== \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: this.state.games.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.get_genre()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          src: this.state.games.background_image\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [\"Mark: \", this.state.games.rating, \" / 5 (\", this.state.games.ratings_count, \" votes)\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Summary:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: this.state.games.description_raw\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : \"\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Games_app;","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Game_app.js"],"names":["React","Component","api","base","key","Games_app","constructor","props","state","query","date","games","getGames","new_query","split","join","res","fetch","handleClick","then","json","result","setState","get_genre","games_array","genres","map","i","index","name","toString","render","e","target","value","background_image","rating","ratings_count","description_raw"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,MAAMC,GAAG,GAAG;AACVC,EAAAA,IAAI,EAAE,0BADI;AAEVC,EAAAA,GAAG,EAAE;AAFK,CAAZ;;AAKA,MAAMC,SAAN,SAAwBJ,SAAxB,CAAkC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,KAAK,EAAE,EADI;AAEXC,MAAAA,IAAI,EAAE,EAFK;AAGXC,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAED,QAAMC,QAAN,GAAiB;AACf,QAAIC,SAAS,GAAG,KAAKL,KAAL,CAAWC,KAAX,CAAiBK,KAAjB,CAAuB,GAAvB,EAA4BC,IAA5B,CAAiC,GAAjC,CAAhB;AACA,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEf,GAAG,CAACC,IAAK,SAAQU,SAAU,EAA/B,CAAvB;AACA,WAAOG,GAAP;AACD;;AAEDE,EAAAA,WAAW,GAAG;AACZ,SAAKN,QAAL,GACGO,IADH,CACSH,GAAD,IAASA,GAAG,CAACI,IAAJ,EADjB,EAEGD,IAFH,CAESE,MAAD,IAAY;AAChB,WAAKC,QAAL,CAAc;AACZX,QAAAA,KAAK,EAAEU,MADK;AAEZZ,QAAAA,KAAK,EAAE;AAFK,OAAd;AAID,KAPH;AAQD;;AAEDc,EAAAA,SAAS,GAAG;AACV,QAAIC,WAAW,GAAG,KAAKhB,KAAL,CAAWG,KAAX,CAAiBc,MAAjB,CAAwBC,GAAxB,CAA4B,CAACC,CAAD,EAAIC,KAAJ,KAAc;AAC1D,0BAAO;AAAA,mBAA6BD,CAAC,CAACE,IAA/B;AAAA,SAAUD,KAAK,CAACE,QAAN,EAAV;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFiB,CAAlB;AAGA,WAAON,WAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,+BACE;AACE,UAAA,IAAI,EAAC,MADP;AAEE,UAAA,WAAW,EAAC,qBAFd;AAGE,UAAA,QAAQ,EAAGC,CAAD,IAAO,KAAKV,QAAL,CAAc;AAAEb,YAAAA,KAAK,EAAEuB,CAAC,CAACC,MAAF,CAASC;AAAlB,WAAd,CAHnB;AAIE,UAAA,KAAK,EAAE,KAAK1B,KAAL,CAAWC;AAJpB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAUE;AAAQ,QAAA,OAAO,EAAE,MAAM,KAAKS,WAAL,EAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAVF,EAWG,OAAO,KAAKV,KAAL,CAAWG,KAAX,CAAiBc,MAAxB,KAAmC,WAAnC,gBACC;AAAA,gCACE;AAAA,oBAAK,KAAKjB,KAAL,CAAWG,KAAX,CAAiBkB;AAAtB;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAA,oBAAM,KAAKN,SAAL;AAAN;AAAA;AAAA;AAAA;AAAA,gBAFF,eAGE;AAAK,UAAA,GAAG,EAAE,KAAKf,KAAL,CAAWG,KAAX,CAAiBwB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBAHF,eAIE;AAAA,+BACS,KAAK3B,KAAL,CAAWG,KAAX,CAAiByB,MAD1B,YAEG,KAAK5B,KAAL,CAAWG,KAAX,CAAiB0B,aAFpB;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJF,eAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,eASE;AAAA,oBAAM,KAAK7B,KAAL,CAAWG,KAAX,CAAiB2B;AAAvB;AAAA;AAAA;AAAA;AAAA,gBATF;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,GAaC,EAxBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AA6BD;;AAhE+B;;AAmElC,eAAejC,SAAf","sourcesContent":["import React, { Component } from \"react\";\n\nconst api = {\n  base: \"https://api.rawg.io/api/\",\n  key: \"de60294f61384714bcf0ed47cdcb2208\"\n};\n\nclass Games_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      date: \"\",\n      games: {}\n    };\n  }\n\n  async getGames() {\n    var new_query = this.state.query.split(\" \").join(\"-\");\n    const res = await fetch(`${api.base}games/${new_query}`);\n    return res;\n  }\n\n  handleClick() {\n    this.getGames()\n      .then((res) => res.json())\n      .then((result) => {\n        this.setState({\n          games: result,\n          query: \"\"\n        });\n      });\n  }\n\n  get_genre() {\n    let games_array = this.state.games.genres.map((i, index) => {\n      return <div key={index.toString()}>{i.name} </div>;\n    });\n    return games_array;\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Game searcher</h1>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Enter the game name\"\n            onChange={(e) => this.setState({ query: e.target.value })}\n            value={this.state.query}\n          ></input>\n        </div>\n        <button onClick={() => this.handleClick()}>Search</button>\n        {typeof this.state.games.genres !== \"undefined\" ? (\n          <div>\n            <h1>{this.state.games.name}</h1>\n            <div>{this.get_genre()}</div>\n            <img src={this.state.games.background_image}></img>\n            <div>\n              Mark: {this.state.games.rating} / 5 (\n              {this.state.games.ratings_count} votes)\n            </div>\n            <h1>Summary:</h1>\n            <div>{this.state.games.description_raw}</div>\n          </div>\n        ) : (\n          \"\"\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Games_app;\n"]},"metadata":{},"sourceType":"module"}