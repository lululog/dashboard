{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js\";\nimport React, { Component, useState, useEffect } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport Divider from '@material-ui/core/Divider';\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch(`${api.base}weather?q=${query}&appid=${api.key}`);\n  return res;\n}\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = this.timer.bind(this);\n    this.state = {\n      query: undefined,\n      weather: {},\n      isDelete: false,\n      intervalId: 0,\n      isSet: false\n    };\n  }\n\n  componentDidMount() {\n    var intervalId = setInterval(this.timer, 1000);\n    this.setState({\n      intervalId: intervalId\n    });\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  handleClick() {\n    getWeatherAPI(this.state.query).then(res => res.json()).then(result => this.setState({\n      query: \"\",\n      weather: result,\n      isSet: true\n    }));\n  }\n\n  KelvinToDegree(temp) {\n    return temp - 273.15;\n  }\n\n  handleClickDelete() {\n    this.setState({\n      isDelete: true\n    });\n  }\n\n  timer() {\n    if (this.state.query != undefined) {\n      getWeatherAPI(this.state.query).then(res => res.json()).then(result => this.setState({\n        query: this.state.query,\n        weather: result\n      }));\n    }\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: this.state.isDelete === false ? /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            backgroundColor: \"#DC143C\",\n            border: \"0\",\n            borderradius: \"3\",\n            boxshadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n            color: \"white\",\n            height: \"auto\",\n            width: \"25px\"\n          },\n          variant: \"contained\",\n          onClick: () => this.handleClickDelete(),\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n          className: classes.root,\n          noValidate: true,\n          autoComplete: \"off\",\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            value: this.state.query,\n            onChange: e => this.setState({\n              query: e.target.value\n            }),\n            id: \"standard-basic\",\n            label: \"Choose a city\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), typeof this.state.weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(List, {\n          className: classes.root,\n          children: [/*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: /*#__PURE__*/_jsxDEV(LocationCityIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: this.state.weather.name,\n              secondary: this.state.weather.sys.country\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: /*#__PURE__*/_jsxDEV(ScheduleIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            variant: \"inset\",\n            component: \"li\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n            children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n              children: /*#__PURE__*/_jsxDEV(Avatar, {\n                children: /*#__PURE__*/_jsxDEV(CloudQueueIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n              primary: Math.round(this.KelvinToDegree(this.state.weather.main.temp)) + \"Â°C\",\n              secondary: this.state.weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Weather_app;","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js"],"names":["React","Component","useState","useEffect","classes","Paper","TextField","Button","List","ListItem","ListItemText","ListItemAvatar","Avatar","LocationCityIcon","ScheduleIcon","CloudQueueIcon","Divider","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","getWeatherAPI","query","res","fetch","Weather_app","constructor","props","timer","bind","state","undefined","weather","isDelete","intervalId","isSet","componentDidMount","setInterval","setState","componentWillUnmount","clearInterval","handleClick","then","json","result","KelvinToDegree","temp","handleClickDelete","render","root","backgroundColor","border","borderradius","boxshadow","color","height","width","e","target","value","main","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { Component, useState, useEffect } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport Divider from '@material-ui/core/Divider';\n\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch (`${api.base}weather?q=${query}&appid=${api.key}`)\n  return res\n}\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.timer = this.timer.bind(this);\n    this.state = {\n      query: undefined,\n      weather: {},\n      isDelete: false,\n      intervalId: 0,\n      isSet: false\n    };\n  }\n\n  componentDidMount() {\n    var intervalId = setInterval(this.timer, 1000);\n\n    this.setState({intervalId: intervalId});\n  }\n\n  componentWillUnmount() {\n    clearInterval(this.state.intervalId);\n  }\n\n  handleClick() {\n    getWeatherAPI(this.state.query)\n    .then(res => res.json())\n    .then(result =>\n      this.setState({query : \"\", weather : result, isSet : true} ))\n  }\n\n  KelvinToDegree(temp) {\n    return (temp - 273.15);\n  }\n\n  handleClickDelete() {\n    this.setState({isDelete: true});\n  }\n\n  timer() {\n    if (this.state.query != undefined) {\n      getWeatherAPI(this.state.query)\n      .then(res => res.json())\n      .then(result =>\n      this.setState({query : this.state.query, weather : result} ))\n    }\n  }\n\n  render() {\n    return (\n      <div>\n      {this.state.isDelete === false ? (\n        <Paper elevation={3} className={classes.root} >\n          <Button style={{\n            backgroundColor: \"#DC143C\",\n            border: \"0\",\n            borderradius: \"3\",\n            boxshadow: \"0 3px 5px 2px rgba(255, 105, 135, .3)\",\n            color: \"white\",\n            height: \"auto\",\n            width: \"25px\",\n          }} variant=\"contained\" onClick={() => this.handleClickDelete()}>X</Button>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField value={this.state.query} onChange={(e) => this.setState({ query: e.target.value })} id=\"standard-basic\" label=\"Choose a city\" />\n          </form>\n          {(typeof this.state.weather.main != \"undefined\") ? (\n          <List className={classes.root}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <LocationCityIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={this.state.weather.name} secondary={this.state.weather.sys.country} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <ScheduleIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={dateBuilder(new Date())} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <CloudQueueIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={Math.round(this.KelvinToDegree(this.state.weather.main.temp)) + \"Â°C\"} secondary={this.state.weather.weather[0].main} />\n            </ListItem>\n          </List>\n          ) : ('')}\n        </Paper>\n      ) : null}\n      </div>\n    );\n  }\n}\n\nexport default Weather_app;\n"]},"metadata":{},"sourceType":"module"}