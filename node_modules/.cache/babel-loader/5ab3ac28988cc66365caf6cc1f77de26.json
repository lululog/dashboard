{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js\";\nimport React, { Component } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch(`${api.base}weather?q=${query}&appid=${api.key}`);\n  return res;\n}\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      weather: {}\n    };\n  }\n\n  handleClick() {\n    console.log(this.state.query);\n    getWeatherAPI(this.state.query).then(res => res.json()).then(result => this.setState({\n      query: \"\",\n      weather: result\n    }));\n  }\n\n  KelvinToDegree(temp) {\n    return temp - 273.15;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: this.state.query,\n          onChange: e => this.setState({\n            query: e.target.value\n          }),\n          id: \"standard-basic\",\n          label: \"Choose a city\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => this.handleClick(),\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), typeof this.state.weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(LocationCityIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: this.state.weather.name,\n            secondary: this.state.weather.sys.country\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(ScheduleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: dateBuilder(new Date())\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(CloudQueueIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: Math.round(this.KelvinToDegree(this.state.weather.main.temp)),\n            secondary: this.state.weather.weather[0].main\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default Weather_app;","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js"],"names":["React","Component","classes","Paper","TextField","Button","List","ListItem","ListItemText","ListItemAvatar","Avatar","LocationCityIcon","ScheduleIcon","CloudQueueIcon","BeachAccessIcon","Divider","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","getWeatherAPI","query","res","fetch","Weather_app","constructor","props","state","weather","handleClick","console","log","then","json","result","setState","KelvinToDegree","temp","render","root","e","target","value","main","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport BeachAccessIcon from '@material-ui/icons/BeachAccess';\nimport Divider from '@material-ui/core/Divider';\n\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch (`${api.base}weather?q=${query}&appid=${api.key}`)\n  return res\n}\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      weather: {}\n    };\n  }\n\n  handleClick() {\n    console.log(this.state.query);\n    getWeatherAPI(this.state.query)\n    .then(res => res.json())\n    .then(result =>\n      this.setState({query : \"\", weather : result} ))\n  }\n\n  KelvinToDegree(temp) {\n    return (temp - 273.15);\n  }\n\n  render() {\n    return (\n        <Paper elevation={3}>\n          <form className={classes.root} noValidate autoComplete=\"off\">\n            <TextField value={this.state.query} onChange={(e) => this.setState({ query: e.target.value })} id=\"standard-basic\" label=\"Choose a city\" />\n            </form>\n          <Button variant=\"contained\" onClick={() => this.handleClick()}>Go</Button>\n          {(typeof this.state.weather.main != \"undefined\") ? (\n          <List className={classes.root}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <LocationCityIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={this.state.weather.name} secondary={this.state.weather.sys.country} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <ScheduleIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={dateBuilder(new Date())} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <CloudQueueIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={Math.round(this.KelvinToDegree(this.state.weather.main.temp))} secondary={this.state.weather.weather[0].main} />\n            </ListItem>\n          </List>\n          ) : ('')}\n        </Paper>\n    );\n  }\n}\n\nexport default Weather_app;\n"]},"metadata":{},"sourceType":"module"}