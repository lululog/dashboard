{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Movie_app.js\";\nimport React, { Component } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport Divider from '@material-ui/core/Divider';\nconst api = {\n  key: \"f2ef0c4aaa4b740781836f8c680494df\",\n  base: \"https://api.themoviedb.org/3/\"\n};\n\nasync function getMovieId(query) {\n  const res = await fetch(`${api.base}search/movie?api_key=${api.key}&query=${query}`);\n  return res;\n}\n\nclass Movie_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      movie: {}\n    };\n  }\n\n  async getMovie(id) {\n    console.log(id);\n    const res = await fetch(`${api.base}movie/${id}?api_key=${api.key}`);\n    return res;\n  }\n\n  handleClick() {\n    getMovieId(this.state.query).then(res => res.json()).then(result => {\n      this.getMovie(String(result.results[0].id)).then(res2 => res2.json()).then(result2 => {\n        this.setState({\n          query: \"\",\n          movie: result2\n        });\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 3,\n      className: classes.root,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.root,\n        noValidate: true,\n        autoComplete: \"off\",\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          value: this.state.query,\n          onChange: e => this.setState({\n            query: e.target.value\n          }),\n          id: \"standard-basic\",\n          label: \"Search a Movie\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"contained\",\n        onClick: () => this.handleClick(),\n        children: \"Go\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), typeof this.state.movie.overview !== {} ? /*#__PURE__*/_jsxDEV(List, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              src: `https://image.tmdb.org/t/p/w185/${this.state.movie.poster_path}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Release date: ${this.state.movie.release_date}`,\n            secondary: `Original language: ${this.state.movie.original_language}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(ScheduleIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            className: classes.overview,\n            primary: `Summary: ${this.state.movie.overview}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          variant: \"inset\",\n          component: \"li\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ListItem, {\n          children: [/*#__PURE__*/_jsxDEV(ListItemAvatar, {\n            children: /*#__PURE__*/_jsxDEV(Avatar, {\n              children: /*#__PURE__*/_jsxDEV(CloudQueueIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n            primary: `Mark: ${this.state.movie.vote_average} / 10`,\n            secondary: `${this.state.movie.vote_count} vote`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this) : '']\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Movie_app;","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Movie_app.js"],"names":["React","Component","classes","Paper","TextField","Button","List","ListItem","ListItemText","ListItemAvatar","Avatar","LocationCityIcon","ScheduleIcon","CloudQueueIcon","Divider","api","key","base","getMovieId","query","res","fetch","Movie_app","constructor","props","state","movie","getMovie","id","console","log","handleClick","then","json","result","String","results","res2","result2","setState","render","root","e","target","value","overview","poster_path","release_date","original_language","vote_average","vote_count"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport classes from '../css/Widget.module.css';\nimport Paper from '@material-ui/core/Paper';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\nimport Avatar from '@material-ui/core/Avatar';\nimport LocationCityIcon from '@material-ui/icons/LocationCity';\nimport ScheduleIcon from '@material-ui/icons/Schedule';\nimport CloudQueueIcon from '@material-ui/icons/CloudQueue';\nimport Divider from '@material-ui/core/Divider';\n\nconst api = {\n  key: \"f2ef0c4aaa4b740781836f8c680494df\",\n  base: \"https://api.themoviedb.org/3/\"\n};\n\nasync function getMovieId(query) {\n  const res = await fetch(\n    `${api.base}search/movie?api_key=${api.key}&query=${query}`\n  );\n  return res;\n}\n\nclass Movie_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      movie: {}\n    };\n  }\n\n  async getMovie(id) {\n    console.log(id);\n    const res = await fetch(`${api.base}movie/${id}?api_key=${api.key}`);\n    return res;\n  }\n\n  handleClick() {\n    getMovieId(this.state.query)\n      .then((res) => res.json())\n      .then((result) => {\n        this.getMovie(String(result.results[0].id))\n          .then((res2) => res2.json())\n          .then((result2) => {\n            this.setState({ query: \"\", movie: result2 });\n          });\n      });\n  }\n\n  render() {\n    return (\n      <Paper elevation={3} className={classes.root} >\n        <form className={classes.root} noValidate autoComplete=\"off\">\n          <TextField value={this.state.query} onChange={(e) => this.setState({ query: e.target.value })} id=\"standard-basic\" label=\"Search a Movie\" />\n        </form>\n        <Button variant=\"contained\" onClick={() => this.handleClick()}>Go</Button>\n        {typeof this.state.movie.overview  !== {} ? (\n        <List className={classes.root}>\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar src={`https://image.tmdb.org/t/p/w185/${this.state.movie.poster_path}`}>\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={`Release date: ${this.state.movie.release_date}`} secondary={`Original language: ${this.state.movie.original_language}`}/>\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <ScheduleIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText className={classes.overview} primary={`Summary: ${this.state.movie.overview}`} />\n            </ListItem>\n            <Divider variant=\"inset\" component=\"li\" />\n            <ListItem>\n              <ListItemAvatar>\n                <Avatar>\n                  <CloudQueueIcon />\n                </Avatar>\n              </ListItemAvatar>\n              <ListItemText primary={`Mark: ${this.state.movie.vote_average} / 10`} secondary={`${this.state.movie.vote_count} vote`}/>\n            </ListItem>\n          </List>\n          ) : ('')}\n      </Paper>\n    );\n  }\n}\n\nexport default Movie_app;\n"]},"metadata":{},"sourceType":"module"}