{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/GoogleBtn.js\",\n    _s = $RefreshSig$();\n\n/*\n** EPITECH PROJECT, 2020\n** B-DEV-500-PAR-5-1-cardgames-lucas.guyader\n** File description:\n** GoogleBtn.js\n*/\nimport React, { Component } from 'react';\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport Dashboard from './Dashboard';\nconst CLIENT_ID = '1065341075883-ai3bp8cagjv0e96ig0phkkng2fovorru.apps.googleusercontent.com';\nexport default function GoogleBtn(props) {\n  _s();\n\n  const [openWeather, setOpenWeather] = React.useState(false);\n  const isLogined = false;\n  this.login = this.login.bind(this);\n  this.handleLoginFailure = this.handleLoginFailure.bind(this);\n  this.logout = this.logout.bind(this);\n  this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n\n  const login = response => {\n    if (response.accessToken) {\n      isLogined = true, props.setAuthGoogle = response.accessToken;\n    }\n  };\n\n  const logout = response => {\n    isLogined = false, props.setAuthGoogle = '';\n  };\n\n  const handleLoginFailure = response => {\n    alert('Failed to log in');\n  };\n\n  const handleLogoutFailure = response => {\n    alert('Failed to log out');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: this.state.isLogined ? /*#__PURE__*/_jsxDEV(GoogleLogout, {\n      clientId: CLIENT_ID,\n      buttonText: \"Logout\",\n      onLogoutSuccess: this.logout,\n      onFailure: this.handleLogoutFailure\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(GoogleLogin, {\n      clientId: CLIENT_ID,\n      buttonText: \"Login with google\",\n      onSuccess: this.login,\n      onFailure: this.handleLoginFailure,\n      cookiePolicy: 'single_host_origin',\n      responseType: \"code,token\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 26\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n} //class GoogleBtn extends Component {\n//   constructor(props) {\n//    super(props);\n//\n//    this.state = {\n//      isLogined: false\n//      //accessToken: ''\n//    };\n//\n//    this.login = this.login.bind(this);\n//    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n//    this.logout = this.logout.bind(this);\n//    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n//  }\n//\n//  login (response) {\n//    if(response.accessToken){\n//      this.setState(state => ({\n//        isLogined: true,\n//        setAuthGoogle: response.accessToken\n//      }));\n//    }\n//  }\n//\n//  logout (response) {\n//    this.setState(state => ({\n//      isLogined: false,\n//      setAuthGoogle: ''\n//    }));\n//  }\n//\n//  handleLoginFailure (response) {\n//    alert('Failed to log in')\n//  }\n//\n//  handleLogoutFailure (response) {\n//    alert('Failed to log out')\n//  }\n//\n//  render() {\n//    return (\n//    <div>\n//      { this.state.isLogined ?\n//        <GoogleLogout\n//            clientId={ CLIENT_ID }\n//            buttonText='Logout'\n//            onLogoutSuccess={ this.logout }\n//            onFailure={ this.handleLogoutFailure}\n//        >\n//        </GoogleLogout>: <GoogleLogin\n//          clientId={ CLIENT_ID }\n//          buttonText='Login with google'\n//          onSuccess={ this.login }\n//          onFailure={ this.handleLoginFailure }\n//          cookiePolicy={ 'single_host_origin' }\n//          responseType='code,token'\n//        />\n//      }\n//      { setAuthGoogle ? <Dashboard authUser={this.state.accessToken} /> : null}\n//\n//    </div>\n//    )\n//  }\n//}\n//export default GoogleBtn\n\n_s(GoogleBtn, \"nyIXnKZlxd4YSVEGxoI2WuDsYts=\");\n\n_c = GoogleBtn;\n\nvar _c;\n\n$RefreshReg$(_c, \"GoogleBtn\");","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/GoogleBtn.js"],"names":["React","Component","GoogleLogin","GoogleLogout","Dashboard","CLIENT_ID","GoogleBtn","props","openWeather","setOpenWeather","useState","isLogined","login","bind","handleLoginFailure","logout","handleLogoutFailure","response","accessToken","setAuthGoogle","alert","state"],"mappings":";;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,YAAtB,QAA0C,oBAA1C;AACA,OAAOC,SAAP,MAAsB,aAAtB;AAEA,MAAMC,SAAS,GAAG,2EAAlB;AAEA,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAAA;;AACvC,QAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCT,KAAK,CAACU,QAAN,CAAe,KAAf,CAAtC;AACA,QAAMC,SAAS,GAAG,KAAlB;AAEA,OAAKC,KAAL,GAAa,KAAKA,KAAL,CAAWC,IAAX,CAAgB,IAAhB,CAAb;AACA,OAAKC,kBAAL,GAA0B,KAAKA,kBAAL,CAAwBD,IAAxB,CAA6B,IAA7B,CAA1B;AACA,OAAKE,MAAL,GAAc,KAAKA,MAAL,CAAYF,IAAZ,CAAiB,IAAjB,CAAd;AACA,OAAKG,mBAAL,GAA2B,KAAKA,mBAAL,CAAyBH,IAAzB,CAA8B,IAA9B,CAA3B;;AAEA,QAAMD,KAAK,GAAIK,QAAD,IAAc;AAC1B,QAAIA,QAAQ,CAACC,WAAb,EAAyB;AACvBP,MAAAA,SAAS,GAAG,IAAZ,EACAJ,KAAK,CAACY,aAAN,GAAsBF,QAAQ,CAACC,WAD/B;AAED;AACF,GALD;;AAOA,QAAMH,MAAM,GAAIE,QAAD,IAAc;AAC3BN,IAAAA,SAAS,GAAG,KAAZ,EACAJ,KAAK,CAACY,aAAN,GAAuB,EADvB;AAED,GAHD;;AAKA,QAAML,kBAAkB,GAAIG,QAAD,IAAc;AACvCG,IAAAA,KAAK,CAAC,kBAAD,CAAL;AACD,GAFD;;AAIA,QAAMJ,mBAAmB,GAAIC,QAAD,IAAc;AACxCG,IAAAA,KAAK,CAAC,mBAAD,CAAL;AACD,GAFD;;AAIA,sBACE;AAAA,cACI,KAAKC,KAAL,CAAWV,SAAX,gBACA,QAAC,YAAD;AACI,MAAA,QAAQ,EAAGN,SADf;AAEI,MAAA,UAAU,EAAC,QAFf;AAGI,MAAA,eAAe,EAAG,KAAKU,MAH3B;AAII,MAAA,SAAS,EAAG,KAAKC;AAJrB;AAAA;AAAA;AAAA;AAAA,YADA,gBAOiB,QAAC,WAAD;AACf,MAAA,QAAQ,EAAGX,SADI;AAEf,MAAA,UAAU,EAAC,mBAFI;AAGf,MAAA,SAAS,EAAG,KAAKO,KAHF;AAIf,MAAA,SAAS,EAAG,KAAKE,kBAJF;AAKf,MAAA,YAAY,EAAG,oBALA;AAMf,MAAA,YAAY,EAAC;AANE;AAAA;AAAA;AAAA;AAAA;AARrB;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;;GApHwBR,S;;KAAAA,S","sourcesContent":["/*\n** EPITECH PROJECT, 2020\n** B-DEV-500-PAR-5-1-cardgames-lucas.guyader\n** File description:\n** GoogleBtn.js\n*/\n\nimport React, { Component } from 'react'\nimport { GoogleLogin, GoogleLogout } from 'react-google-login';\nimport Dashboard from './Dashboard';\n\nconst CLIENT_ID = '1065341075883-ai3bp8cagjv0e96ig0phkkng2fovorru.apps.googleusercontent.com';\n\nexport default function GoogleBtn(props) {\n  const [openWeather, setOpenWeather] = React.useState(false);\n  const isLogined = false;\n\n  this.login = this.login.bind(this);\n  this.handleLoginFailure = this.handleLoginFailure.bind(this);\n  this.logout = this.logout.bind(this);\n  this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n\n  const login = (response) => {\n    if (response.accessToken){\n      isLogined = true,\n      props.setAuthGoogle = response.accessToken\n    }\n  }\n\n  const logout = (response) => {\n    isLogined = false,\n    props.setAuthGoogle =  ''\n  }\n\n  const handleLoginFailure = (response) => {\n    alert('Failed to log in')\n  }\n\n  const handleLogoutFailure = (response) => {\n    alert('Failed to log out')\n  }\n\n  return (\n    <div>\n      { this.state.isLogined ?\n        <GoogleLogout\n            clientId={ CLIENT_ID }\n            buttonText='Logout'\n            onLogoutSuccess={ this.logout }\n            onFailure={ this.handleLogoutFailure}\n        >\n        </GoogleLogout>: <GoogleLogin\n          clientId={ CLIENT_ID }\n          buttonText='Login with google'\n          onSuccess={ this.login }\n          onFailure={ this.handleLoginFailure }\n          cookiePolicy={ 'single_host_origin' }\n          responseType='code,token'\n        />\n      }\n    </div>\n  )\n}\n\n//class GoogleBtn extends Component {\n//   constructor(props) {\n//    super(props);\n//\n//    this.state = {\n//      isLogined: false\n//      //accessToken: ''\n//    };\n//\n//    this.login = this.login.bind(this);\n//    this.handleLoginFailure = this.handleLoginFailure.bind(this);\n//    this.logout = this.logout.bind(this);\n//    this.handleLogoutFailure = this.handleLogoutFailure.bind(this);\n//  }\n//\n//  login (response) {\n//    if(response.accessToken){\n//      this.setState(state => ({\n//        isLogined: true,\n//        setAuthGoogle: response.accessToken\n//      }));\n//    }\n//  }\n//\n//  logout (response) {\n//    this.setState(state => ({\n//      isLogined: false,\n//      setAuthGoogle: ''\n//    }));\n//  }\n//\n//  handleLoginFailure (response) {\n//    alert('Failed to log in')\n//  }\n//\n//  handleLogoutFailure (response) {\n//    alert('Failed to log out')\n//  }\n//\n//  render() {\n//    return (\n//    <div>\n//      { this.state.isLogined ?\n//        <GoogleLogout\n//            clientId={ CLIENT_ID }\n//            buttonText='Logout'\n//            onLogoutSuccess={ this.logout }\n//            onFailure={ this.handleLogoutFailure}\n//        >\n//        </GoogleLogout>: <GoogleLogin\n//          clientId={ CLIENT_ID }\n//          buttonText='Login with google'\n//          onSuccess={ this.login }\n//          onFailure={ this.handleLoginFailure }\n//          cookiePolicy={ 'single_host_origin' }\n//          responseType='code,token'\n//        />\n//      }\n//      { setAuthGoogle ? <Dashboard authUser={this.state.accessToken} /> : null}\n//\n//    </div>\n//    )\n//  }\n//}\n\n//export default GoogleBtn"]},"metadata":{},"sourceType":"module"}