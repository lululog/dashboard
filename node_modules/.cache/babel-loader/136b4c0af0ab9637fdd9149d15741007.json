{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js\";\nimport React, { Component } from \"react\";\nimport Paper from '@material-ui/core/Paper';\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = d => {\n  let months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  let days = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"];\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch(`${api.base}weather?q=${query}&appid=${api.key}`);\n  return res;\n}\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      weather: {}\n    };\n  }\n\n  handleClick() {\n    console.log(this.state.query);\n    getWeatherAPI(this.state.query).then(res => res.json()).then(result => this.setState({\n      query: \"\",\n      weather: result\n    }));\n  }\n\n  KelvinToDegree(temp) {\n    return temp - 273.15;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Paper, {\n        elevation: 3,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Choose a city\",\n            onChange: e => this.setState({\n              query: e.target.value\n            }),\n            value: this.state.query\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => this.handleClick(),\n            children: \"Go\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }, this), typeof this.state.weather.main != \"undefined\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [this.state.weather.name, \", \", this.state.weather.sys.country]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: dateBuilder(new Date())\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              children: [Math.round(this.KelvinToDegree(this.state.weather.main.temp)), \"\\xB0C\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: this.state.weather.weather[0].main\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 9\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 9\n        }, this) : '']\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default Weather_app;","map":{"version":3,"sources":["/home/R3G4/Delivery/B-DEV-500-PAR-5-1-cardgames-lucas.guyader/src/components/Weather_app.js"],"names":["React","Component","Paper","api","key","base","dateBuilder","d","months","days","day","getDay","date","getDate","month","getMonth","year","getFullYear","getWeatherAPI","query","res","fetch","Weather_app","constructor","props","state","weather","handleClick","console","log","then","json","result","setState","KelvinToDegree","temp","render","e","target","value","main","name","sys","country","Date","Math","round"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Paper from '@material-ui/core/Paper';\n\nconst api = {\n  key: \"3ca7ac710975ca6f256d01eabc07f6b0\",\n  base: \"https://api.openweathermap.org/data/2.5/\"\n};\n\nconst dateBuilder = (d) => {\n  let months = [\n    \"January\",\n    \"February\",\n    \"March\",\n    \"April\",\n    \"May\",\n    \"June\",\n    \"July\",\n    \"August\",\n    \"September\",\n    \"October\",\n    \"November\",\n    \"December\"\n  ];\n  let days = [\n    \"Sunday\",\n    \"Monday\",\n    \"Tuesday\",\n    \"Wednesday\",\n    \"Thursday\",\n    \"Friday\",\n    \"Saturday\"\n  ];\n\n  let day = days[d.getDay()];\n  let date = d.getDate();\n  let month = months[d.getMonth()];\n  let year = d.getFullYear();\n\n  return `${day} ${date} ${month} ${year}`;\n};\n\nasync function getWeatherAPI(query) {\n  const res = await fetch (`${api.base}weather?q=${query}&appid=${api.key}`)\n  return res\n}\n\n\n\nclass Weather_app extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n      weather: {}\n    };\n  }\n\n  handleClick() {\n    console.log(this.state.query);\n    getWeatherAPI(this.state.query)\n    .then(res => res.json())\n    .then(result =>\n      this.setState({query : \"\", weather : result} ))\n  }\n\n  KelvinToDegree(temp) {\n    return (temp - 273.15);\n  }\n\n  render() {\n    return (\n      <div>\n        <Paper elevation={3}>\n        <div>\n          <input\n            type=\"text\"\n            placeholder=\"Choose a city\"\n            onChange={(e) => this.setState({ query: e.target.value })}\n            value={this.state.query}\n          ></input>\n          <button onClick={() => this.handleClick()}>Go</button>\n        </div>\n        {(typeof this.state.weather.main != \"undefined\") ? (\n        <div>\n          <div>\n            <div>{this.state.weather.name}, {this.state.weather.sys.country}</div>\n            <div>{dateBuilder(new Date())}</div>\n          </div>\n          <div>\n            <div>{Math.round(this.KelvinToDegree(this.state.weather.main.temp))}Â°C</div>\n        <div>{this.state.weather.weather[0].main}</div>\n          </div>\n        </div>\n        ) : ('')}\n        </Paper>\n      </div>\n    );\n  }\n}\n\nexport default Weather_app;\n"]},"metadata":{},"sourceType":"module"}